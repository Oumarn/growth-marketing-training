import { notFound } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Link from 'next/link';
import { Clock, Users, Target, Download, CheckCircle } from 'lucide-react';
import Breadcrumbs from '@/components/Breadcrumbs';
import MarkCompleteButtonClient from '@/components/MarkCompleteButtonClient';
import { DashboardExpressWorkshop } from '@/components/DashboardExpressWorkshop';


const ateliers: Record<string, any> = {
  'buyer-persona': {
    title: 'Buyer Persona Workshop',
    duration: '45min',
    description: 'Cr√©ez des personas d√©taill√©s pour mieux comprendre votre audience cible',
    objectives: [
      'Identifier les segments cl√©s de votre audience',
      'Cr√©er des personas d√©taill√©s avec demographics et psychographics',
      'D√©finir les pain points et motivations de chaque persona',
      'Adapter votre messaging pour chaque segment'
    ],
    materials: [
      'Template Buyer Persona',
      'Questionnaire de recherche utilisateur',
      'Guide d\'interview client'
    ],
    steps: [
      {
        title: 'Phase 1: Recherche (15min)',
        content: 'Analysez vos donn√©es existantes (Analytics, CRM, Support) pour identifier les patterns dans votre audience actuelle.'
      },
      {
        title: 'Phase 2: Cr√©ation (20min)',
        content: 'Utilisez le template pour cr√©er 2-3 personas principaux avec leurs caract√©ristiques d√©mographiques, comportementales et motivationnelles.'
      },
      {
        title: 'Phase 3: Validation (10min)',
        content: 'Reviewez vos personas avec votre √©quipe et identifiez les hypoth√®ses √† valider avec de vraies donn√©es clients.'
      }
    ],
    deliverables: [
      '2-3 personas document√©s',
      'Plan de validation des hypoth√®ses',
      'Recommandations messaging par persona'
    ]
  },
  'funnel-canvas': {
    title: 'Funnel Canvas',
    duration: '45min',
    description: 'Mappez votre funnel de conversion complet et identifiez les points d\'optimisation',
    objectives: [
      'Visualiser votre funnel actuel √©tape par √©tape',
      'Identifier les points de friction majeurs',
      'Calculer les taux de conversion √† chaque √©tape',
      'Prioriser les optimisations √† impact'
    ],
    materials: [
      'Template Funnel Canvas',
      'Calculateur de conversion',
      'Checklist d\'optimisation'
    ],
    steps: [
      {
        title: 'Phase 1: Mapping (20min)',
        content: 'Dessinez votre funnel actuel avec toutes les √©tapes depuis la premi√®re interaction jusqu\'√† la conversion finale.'
      },
      {
        title: 'Phase 2: M√©triques (15min)',
        content: 'Ajoutez les volumes et taux de conversion √† chaque √©tape. Identifiez o√π vous perdez le plus d\'utilisateurs.'
      },
      {
        title: 'Phase 3: Optimisation (10min)',
        content: 'Listez 3-5 actions d\'optimisation prioritaires bas√©es sur l\'impact potentiel et la facilit√© d\'impl√©mentation.'
      }
    ],
    deliverables: [
      'Funnel Canvas complet',
      'Analyse des points de friction',
      'Plan d\'optimisation prioris√©'
    ]
  },
  'experiment-card': {
    title: 'Atelier Express ‚Äî "Design & Size"',
    duration: '30-40min',
    description: 'Cr√©ez vos premiers tests A/B structur√©s : de l\'id√©e √† la d√©cision avec templates et outils fournis',
    objectives: [
      'Passer d\'id√©es √† des hypoth√®ses testables (Experiment Card)',
      'Choisir le bon type de test et fixer KPI primaire/secondaires/guardrails',
      'Planifier (MDE, dur√©e) et d√©finir crit√®res start/iterate/kill',
      'Ma√Ætriser les templates et outils pour lancer vos tests'
    ],
    materials: [
      'Template Experiment Card (format standard 1 page)',
      'Calculateur MDE (Google Sheets avec formules)',
      'Experiments Log (tracking des apprentissages)',
      'Templates MVT & Bandits'
    ],
    phases: [
      {
        title: 'Id√©ation',
        duration: '5min',
        content: '5 id√©es ‚Üí score ICE ‚Üí top 2',
        deliverable: '2 id√©es de tests prioris√©es',
        tips: [
          'Brainstormez 5 id√©es d\'optimisation sur votre funnel',
          'Scorez chaque id√©e sur Impact, Confidence, Ease (1-3)',
          'S√©lectionnez les 2 meilleures pour cr√©er des Experiment Cards'
        ]
      },
      {
        title: 'Experiment Cards',
        duration: '10min',
        content: 'Hypoth√®se, KPI, design, tracking, seuils',
        deliverable: '2 Experiment Cards compl√®tes',
        tips: [
          'Utilisez la formule SMART : Chez [segment], [changement] augmentera [KPI] de +X pts en [p√©riode], car [insight]',
          '1 seul KPI primaire + secondaires + guardrails align√©s NSM',
          'D√©finissez variantes A/B, ciblage et plan de tracking'
        ]
      },
      {
        title: 'Dimensionnement',
        duration: '10min',
        content: 'Baseline + MDE ‚Üí √©chantillon & dur√©e',
        deliverable: 'Estimation trafic/dur√©e par test',
        tips: [
          'MDE = Minimum Detectable Effect (am√©lioration minimale √† d√©tecter)',
          'Baseline basse (2-5%) + MDE petit (+1-2 pts) = 1000-2000 par variante',
          'Dur√©e : 7-14 jours minimum, cycle hebdo complet'
        ]
      },
      {
        title: 'Pr√©sentation',
        duration: '5min',
        content: '1 slide/test ‚Äî d√©cision & next step',
        deliverable: 'Crit√®res start/iterate/kill + planning Q1 2025',
        tips: [
          'START : effet ‚â• seuil + pas d\'impact n√©gatif guardrails',
          'ITERATE : signaux positifs mais insuffisants',
          'KILL : effet nul/n√©gatif + documenter l\'apprentissage'
        ]
      }
    ],
    steps: [
      {
        title: 'Phase 1: Id√©ation & Priorisation (5min)',
        content: 'Brainstormez 5 id√©es d\'optimisation, scorez-les ICE (Impact-Confidence-Ease 1-3) et s√©lectionnez le top 2 pour vos Experiment Cards.'
      },
      {
        title: 'Phase 2: Cr√©ation des Experiment Cards (10min)',  
        content: 'Pour chaque id√©e s√©lectionn√©e, cr√©ez une Experiment Card compl√®te avec hypoth√®se SMART, KPI primaire unique, secondaires, guardrails et design des variantes.'
      },
      {
        title: 'Phase 3: Dimensionnement & Planification (10min)',
        content: 'Calculez la taille d\'√©chantillon n√©cessaire selon votre baseline et MDE souhait√©. Estimez la dur√©e selon votre trafic quotidien.'
      },
      {
        title: 'Phase 4: Crit√®res de D√©cision & Next Steps (5min)',
        content: 'D√©finissez vos seuils pour Start/Iterate/Kill et planifiez le lancement (owner, timing, outils) pour Q1 2025.'
      }
    ],
    deliverables: [
      '2 Experiment Cards compl√®tes (hypoth√®se + KPIs + design)',
      'Estimation trafic/dur√©e par test avec calculs MDE',
      'Crit√®res start/iterate/kill d√©finis avec seuils',
      'Planning de lancement Q1 2025 (owner + timing + outils)'
    ],
    templates: [
      {
        name: 'Experiment Card Template',
        description: 'Format standard 1 page',
        icon: 'üìù',
        downloadUrl: '/downloads/experiment-card-template.md'
      },
      {
        name: 'Calculateur MDE',
        description: 'Google Sheets avec formules',
        icon: 'üßÆ',
        downloadUrl: '/downloads/mde-calculator-template.csv'
      },
      {
        name: 'Log des Exp√©riences',
        description: 'Tracking des apprentissages',
        icon: 'üìä',
        downloadUrl: '/downloads/experiments-log-template.csv'
      },
      {
        name: 'Templates MVT & Bandits',
        description: 'Tests avanc√©s',
        icon: 'üß™',
        downloadUrl: '/downloads/mvt-template.md'
      }
    ]
  },
  'no-code-starter': {
    title: 'No-Code Automation Setup',
    duration: '60-90min',
    description: 'Construisez vos premiers workflows automatis√©s sans code',
    objectives: [
      'Configurer vos premiers outils no-code',
      'Cr√©er un workflow d\'onboarding automatis√©',
      'Mettre en place un syst√®me de lead scoring',
      'Automatiser votre reporting'
    ],
    materials: [
      'Acc√®s Zapier/Make (gratuit)',
      'Templates de workflows',
      'Guide de configuration √©tape par √©tape'
    ],
    steps: [
      {
        title: 'Phase 1: Setup (20min)',
        content: 'Cr√©ez vos comptes sur Zapier et les outils connect√©s (Gmail, Google Sheets, etc.). Configurez les permissions et API keys.'
      },
      {
        title: 'Phase 2: Premier Workflow (30min)',
        content: 'Construisez un workflow simple : Nouveau lead (formulaire) ‚Üí Ajout CRM ‚Üí Email de bienvenue ‚Üí Notification √©quipe.'
      },
      {
        title: 'Phase 3: Test & Scale (20min)',
        content: 'Testez votre workflow avec de fausses donn√©es, puis cr√©ez 1-2 workflows additionnels pour d\'autres cas d\'usage.'
      }
    ],
    deliverables: [
      '2-3 workflows automatis√©s fonctionnels',
      'Documentation des processus',
      'Plan de scaling des automations'
    ]
  },
  'mini-campagne': {
    title: 'Mini-Campagne Workshop',
    duration: '55min',
    description: 'Concevez une campagne de growth marketing compl√®te avec landing page, ads et email sequence',
    objectives: [
      'D√©finir une strat√©gie de campagne coh√©rente',
      'Cr√©er une landing page optimis√©e pour la conversion',
      'Concevoir des ads performantes (Facebook/Google)',
      'Structurer une email sequence de nurturing',
      'D√©finir les KPIs et plan de mesure'
    ],
    materials: [
      'Cadres PAS & AIDA',
      'Templates Landing Page & Email',
      'Exemples de plans de test',
      'Dashboard de KPIs',
      'Experiment Cards templates'
    ],
    steps: [
      {
        title: 'Phase 1: Strat√©gie & Persona (15min)',
        content: 'D√©finissez votre audience cible, votre proposition de valeur unique et votre objectif de campagne (acquisition, activation, retention).'
      },
      {
        title: 'Phase 2: Landing Page & Ads (25min)',
        content: 'Cr√©ez votre landing page avec headlines, CTA et social proof. Concevez vos ads avec visuals et copy adapt√©s √† chaque plateforme.'
      },
      {
        title: 'Phase 3: Email Sequence & KPIs (15min)',
        content: 'Structurez votre sequence d\'emails post-conversion (welcome, education, social proof). D√©finissez vos m√©triques de succ√®s.'
      }
    ],
    deliverables: [
      'Brief de campagne complet',
      'Maquette landing page annot√©e',
      '3-5 variations d\'ads avec copy',
      'Email sequence (3-5 emails)',
      'Dashboard KPIs avec targets'
    ],
    frameworks: {
      pas: {
        title: 'PAS (Problem‚ÄìAgitate‚ÄìSolve)',
        usage: 'Pour ads et landing pages',
        example: 'P: "Perdez-vous 2h/sem. √† fixer des RDV ?" | A: "Allers-retours, no-shows, multi-interviewers‚Ä¶" | S: "Partagez 1 lien. +20% de RDV tenus."'
      },
      aida: {
        title: 'AIDA (Attention‚ÄìInterest‚ÄìDesire‚ÄìAction)', 
        usage: 'Pour s√©quences compl√®tes',
        example: 'A: Hook accrocheur | I: B√©n√©fice clair | D: Preuve sociale | A: CTA direct'
      }
    },
    templates: {
      landing: {
        title: 'Landing ‚Äî Squelette',
        elements: [
          'H1 (b√©n√©fice) : "Remplacez 10 emails par 1 lien ‚Äî +20% de RDV tenus."',
          'H2 (contexte) : Pour [ICP] qui [situation/pain]',
          '3 Bullet proofs : chiffre, cas bref, int√©gration cl√©',
          'CTA unique : "Cr√©er mon lien en 2 min"',
          'Confiance : logos clients, avis ‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ, capture avant/apr√®s, FAQ courte'
        ]
      },
      email: {
        title: 'Email d\'activation ‚Äî Squelette',
        elements: [
          'Objet A : "Votre 1er RDV en 2 minutes (vraiment)"',
          'Objet B : "+20% de RDV tenus (essai)"',
          'Corps : accroche pain‚Üíb√©n√©fice ‚Ä¢ √©tapes 1-2-3 ‚Ä¢ CTA ‚Ä¢ PS preuve'
        ]
      }
    },
    testExamples: [
      {
        title: 'Test Landing Page',
        hypothesis: 'Chez [PME Sales], ajouter la preuve chiffr√©e ‚Üë CVR visite‚Üísignup de +2 pts.',
        abTest: 'H1 "b√©n√©fice chiffr√©" vs "temps gagn√©"',
        duration: '14 j',
        kpis: 'Principal CVR 5% ‚Üí ‚â•7% (p<0,05) ; Secondaires Time on page, Scroll depth',
        decision: '‚â•7% ‚Üí Scale ; 6‚Äì7% ‚Üí Iterate ; <6% ‚Üí Kill'
      },
      {
        title: 'Test Email Activation',
        hypothesis: 'L\'objet "2 minutes" ‚Üì TTFV de 20% vs B.',
        abTest: 'Objet A "2 min" vs B "b√©n√©fice"',
        duration: '7 j',
        kpis: 'Open/CTR, Activations J1',
        decision: 'TTFV <10h ‚Üí Deploy A ; >15h ‚Üí Test nouveau format'
      },
      {
        title: 'Test Ads Campaign',
        hypothesis: 'Le hook "no-shows" ‚Üë CTR de +30%.',
        abTest: 'Creative A (no-shows focus) vs B (email focus)',
        duration: '10 j',
        kpis: 'CTR ‚â•2.5% ; 2nd : CPC, CVR post-clic',
        decision: 'CTR >3% ‚Üí Scale budget ; <2% ‚Üí Test nouvelles cr√©as'
      }
    ],
    restitution: {
      format: '1 slide/√©quipe (1 min) ‚Äî ICP & one-liner ‚Ä¢ LP (contenu) ‚Ä¢ Ads/Carrousel ‚Ä¢ Email A/B ‚Ä¢ Plan A/B & KPIs ‚Ä¢ Next step',
      bareme: {
        'Clart√© ICP & pain': '20%',
        'Proposition de valeur & preuves': '25%',
        'Testabilit√© (A/B, KPIs, seuils)': '25%',
        'Qualit√© des assets': '20%',
        'Timing & next step': '10%'
      }
    }
  },
  'dashboard-express': {
    title: 'Dashboard Express Workshop',
    duration: '15min',
    description: 'Cr√©ez rapidement un NSM input tree et wireframe de dashboard avec calculs essentiels',
    objectives: [
      'Dessiner un NSM input tree (NSM + 4 inputs)',
      'Sketcher un wireframe dashboard (6-8 cartes)',
      'Calculer 3 formules essentielles avec seuils',
      'Assigner des owners par carte KPI'
    ],
    materials: [
      'Template NSM Input Tree',
      'Wireframe Dashboard (Exec/Squad)',
      'Calculateur de formules AAARRR',
      'Guide des seuils KPI',
      'Checklist data quality'
    ],
    phases: [
      {
        title: 'NSM Input Tree',
        duration: '5min',
        content: 'Dessinez votre NSM principal + 4 inputs cl√©s qui l\'impactent directement',
        deliverable: '1 NSM + 4 inputs connect√©s',
        tips: [
          'Choisissez un NSM mesurable (ex: utilisateurs activ√©s/semaine)',
          'Identifiez 4 leviers directs (acquisition, activation, r√©tention, revenus)',
          'V√©rifiez que chaque input est actionnable par des exp√©riences'
        ]
      },
      {
        title: 'Dashboard Wireframe',
        duration: '7min',
        content: 'Sketchez 6-8 cartes pour un dashboard Exec OU Squad',
        deliverable: 'Wireframe avec 6-8 cartes + seuils',
        tips: [
          'Exec: focus outcomes (NSM, LTV:CAC, D30)',
          'Squad: focus inputs (AAARRR d√©taill√©, segments)',
          'Chaque carte = titre + m√©trique + seuil (vert/orange/rouge)',
          'Assignez un \'owner\' responsable par carte'
        ]
      },
      {
        title: 'Calculs essentiels',
        duration: '3min',
        content: 'Calculez 3 formules dans un onglet : CVR, Activation rate, Free‚ÜíPaid',
        deliverable: '3 formules avec donn√©es d\'exemple',
        tips: [
          'CVR = signups √∑ visiteurs',
          'Activation = users activ√©s √∑ signups',
          'Free‚ÜíPaid = payants √∑ free users',
          'Utilisez des donn√©es r√©alistes de votre secteur'
        ]
      }
    ],
    steps: [
      {
        title: 'Phase 1: NSM Input Tree (5min)',
        content: 'Dessinez votre NSM principal + 4 inputs cl√©s qui l\'impactent directement. V√©rifiez que chaque input est actionnable par des exp√©riences.'
      },
      {
        title: 'Phase 2: Dashboard Wireframe (7min)',
        content: 'Sketchez 6-8 cartes pour un dashboard Exec OU Squad. Chaque carte = titre + m√©trique + seuil (vert/orange/rouge) + owner assign√©.'
      },
      {
        title: 'Phase 3: Calculs essentiels (3min)',
        content: 'Calculez 3 formules dans un onglet : CVR (signups √∑ visiteurs), Activation rate (activ√©s √∑ signups), Free‚ÜíPaid (payants √∑ free users).'
      }
    ],
    deliverables: [
      'NSM input tree avec 4 connexions',
      'Wireframe dashboard (6-8 cartes + seuils)',
      '3 formules calcul√©es avec donn√©es exemple',
      'Assignment des owners par KPI'
    ]
  }
};

export async function generateStaticParams() {
  return Object.keys(ateliers).map((slug) => ({
    slug,
  }));
}

export default async function AtelierPage({ params }: { params: Promise<{ slug: string }> }) {
  const resolvedParams = await params;
  const atelier = ateliers[resolvedParams.slug];
  
  if (!atelier) {
    notFound();
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-4xl mx-auto px-4 py-12 sm:px-6 lg:px-8">
        {/* Breadcrumbs */}
        <Breadcrumbs 
          items={[
            { label: 'Modules', href: '/modules' },
            { label: 'Ateliers', href: '/ateliers' },
            { label: atelier.title }
          ]} 
        />

        {/* Header */}
        <div className="bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-xl p-8 mb-8">
          <div className="flex items-center mb-4">
            <div className="bg-white/20 rounded-full p-3 mr-4">
              <Target className="w-8 h-8" />
            </div>
            <div>
              <h1 className="text-3xl font-bold mb-2">{atelier.title}</h1>
              <div className="flex items-center gap-4 text-purple-100">
                <div className="flex items-center">
                  <Clock className="w-4 h-4 mr-1" />
                  {atelier.duration}
                </div>
                <div className="flex items-center">
                  <Users className="w-4 h-4 mr-1" />
                  Atelier pratique
                </div>
              </div>
            </div>
          </div>
          <p className="text-lg text-purple-100">
            {atelier.description}
          </p>
        </div>

        <div className="grid gap-8 lg:grid-cols-3">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-8">
            {/* Objectifs */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Target className="w-5 h-5 mr-2 text-purple-600" />
                  Objectifs d'apprentissage
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {atelier.objectives.map((objective: string, index: number) => (
                    <li key={index} className="flex items-start">
                      <CheckCircle className="w-5 h-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" />
                      <span>{objective}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>

            {/* Interface Interactive pour Dashboard Express */}
            {resolvedParams.slug === 'dashboard-express' && atelier.phases && (
              <DashboardExpressWorkshop phases={atelier.phases} />
            )}

            {/* Phases d√©taill√©es pour experiment-card */}
            {resolvedParams.slug === 'experiment-card' && atelier.phases && (
              <Card>
                <CardHeader>
                  <CardTitle>üéØ D√©roul√© de l'Atelier Express (30-40')</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid md:grid-cols-2 gap-6">
                    {atelier.phases.map((phase: any, index: number) => (
                      <div key={index} className="bg-gradient-to-r from-orange-50 to-red-50 rounded-lg p-4 border border-orange-200">
                        <div className="flex items-center gap-3 mb-3">
                          <div className="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
                            <span className="text-orange-600 font-bold text-sm">{index + 1}</span>
                          </div>
                          <div>
                            <h3 className="font-semibold text-orange-900">{phase.title} ({phase.duration})</h3>
                            <p className="text-xs text-gray-600">{phase.content}</p>
                          </div>
                        </div>
                        <div className="bg-white rounded p-3 border border-orange-200 mb-3">
                          <p className="text-xs font-medium text-orange-800 mb-1">üì¶ Livrable:</p>
                          <p className="text-xs text-gray-700">{phase.deliverable}</p>
                        </div>
                        <div className="space-y-1">
                          <p className="text-xs font-medium text-orange-800">üí° Tips:</p>
                          {phase.tips.map((tip: string, tipIndex: number) => (
                            <p key={tipIndex} className="text-xs text-gray-700 flex items-start gap-1">
                              <span className="text-orange-500 mt-0.5">‚Ä¢</span>
                              {tip}
                            </p>
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* √âtapes */}
            {resolvedParams.slug !== 'dashboard-express' && resolvedParams.slug !== 'experiment-card' && (
              <Card>
                <CardHeader>
                  <CardTitle>D√©roul√© de l'atelier</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    {atelier.steps.map((step: any, index: number) => (
                      <div key={index} className="border-l-4 border-purple-200 pl-4">
                        <h3 className="font-semibold text-lg mb-2">{step.title}</h3>
                        <p className="text-gray-600">{step.content}</p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* √âtapes simplifi√©es pour experiment-card */}
            {resolvedParams.slug === 'experiment-card' && (
              <Card>
                <CardHeader>
                  <CardTitle>√âtapes d√©taill√©es</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    {atelier.steps.map((step: any, index: number) => (
                      <div key={index} className="border-l-4 border-purple-200 pl-4">
                        <h3 className="font-semibold text-lg mb-2">{step.title}</h3>
                        <p className="text-gray-600">{step.content}</p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Livrables */}
            <Card>
              <CardHeader>
                <CardTitle>üì¶ Livrables attendus</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {atelier.deliverables.map((deliverable: string, index: number) => (
                    <li key={index} className="flex items-start gap-2">
                      <span className="text-green-500 mt-1">‚úì</span>
                      <span>{deliverable}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>

            {/* Templates & Outils pour experiment-card */}
            {resolvedParams.slug === 'experiment-card' && atelier.templates && (
              <Card>
                <CardHeader>
                  <CardTitle>üí° Templates & Outils Fournis</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid md:grid-cols-2 gap-4">
                    {atelier.templates.map((template: any, index: number) => (
                      <div key={index} className="text-center bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-4 border border-blue-200">
                        <div className="text-2xl mb-2">{template.icon}</div>
                        <p className="font-medium text-sm text-gray-900 mb-1">{template.name}</p>
                        <p className="text-xs text-gray-600 mb-3">{template.description}</p>
                        <Link href={template.downloadUrl} target="_blank">
                          <Button 
                            size="sm" 
                            variant="outline"
                            className="w-full"
                          >
                            <Download className="w-4 h-4 mr-1" />
                            T√©l√©charger
                          </Button>
                        </Link>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Pack Download pour experiment-card */}
            {resolvedParams.slug === 'experiment-card' && (
              <div className="bg-gradient-to-r from-purple-600 to-indigo-600 rounded-lg p-6 text-white text-center">
                <div className="text-4xl mb-3">üéÅ</div>
                <h3 className="text-xl font-bold mb-3">Pack Module 5 ‚Äî Exp√©rimentation</h3>
                <p className="text-purple-100 mb-4 text-sm">
                  Tous les templates et outils pour lancer vos premiers tests A/B : 
                  Experiment Cards, calculateur MDE, journal des apprentissages et exemples pr√™ts √† l'emploi.
                </p>
                
                <div className="flex flex-col gap-2">
                  <Link href="/download" target="_blank">
                    <Button className="bg-white text-purple-600 hover:bg-purple-50 font-semibold w-full">
                      üì• T√©l√©charger le Pack Complet
                    </Button>
                  </Link>
                  <Link href="/templates" target="_blank">
                    <Button 
                      variant="outline" 
                      className="border-white text-white hover:bg-white hover:text-purple-600 w-full"
                    >
                      üìù Voir Tous les Templates
                    </Button>
                  </Link>
                </div>
              </div>
            )}

            {/* Cadres & Templates pour mini-campagne */}
            {resolvedParams.slug === 'mini-campagne' && atelier.frameworks && (
              <>
                <Card>
                  <CardHeader>
                    <CardTitle>Cadres de Message</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div className="bg-blue-50 rounded p-4">
                        <h4 className="font-semibold text-blue-900 mb-2">{atelier.frameworks.pas.title}</h4>
                        <p className="text-sm text-blue-700 mb-2">{atelier.frameworks.pas.usage}</p>
                        <p className="text-sm text-gray-700 italic">{atelier.frameworks.pas.example}</p>
                      </div>
                      <div className="bg-green-50 rounded p-4">
                        <h4 className="font-semibold text-green-900 mb-2">{atelier.frameworks.aida.title}</h4>
                        <p className="text-sm text-green-700 mb-2">{atelier.frameworks.aida.usage}</p>
                        <p className="text-sm text-gray-700 italic">{atelier.frameworks.aida.example}</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>Templates Pr√™ts</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-2">{atelier.templates.landing.title}</h4>
                        <ul className="space-y-1">
                          {atelier.templates.landing.elements.map((element: string, index: number) => (
                            <li key={index} className="text-sm text-gray-700 flex items-start">
                              <span className="text-purple-500 mr-2 mt-0.5">‚Ä¢</span>
                              {element}
                            </li>
                          ))}
                        </ul>
                      </div>
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-2">{atelier.templates.email.title}</h4>
                        <ul className="space-y-1">
                          {atelier.templates.email.elements.map((element: string, index: number) => (
                            <li key={index} className="text-sm text-gray-700 flex items-start">
                              <span className="text-purple-500 mr-2 mt-0.5">‚Ä¢</span>
                              {element}
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>Plans de Test ‚Äî Exemples</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {atelier.testExamples.map((example: any, index: number) => (
                        <div key={index} className="border rounded-lg p-4">
                          <h4 className="font-semibold text-gray-900 mb-2">{example.title}</h4>
                          <div className="space-y-2 text-sm">
                            <p><strong>Hypoth√®se:</strong> {example.hypothesis}</p>
                            <p><strong>A/B:</strong> {example.abTest}</p>
                            <p><strong>Dur√©e:</strong> {example.duration}</p>
                            <p><strong>KPIs:</strong> {example.kpis}</p>
                            <p><strong>D√©cision:</strong> {example.decision}</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>Restitution & Bar√®me</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-2">Format (10' total)</h4>
                        <p className="text-sm text-gray-700">{atelier.restitution.format}</p>
                      </div>
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-2">Bar√®me</h4>
                        <ul className="space-y-1">
                          {Object.entries(atelier.restitution.bareme).map(([key, value]: [string, any], index: number) => (
                            <li key={index} className="text-sm text-gray-700 flex justify-between">
                              <span>{key}</span>
                              <strong>{value}</strong>
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </>
            )}

          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Ressources */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Download className="w-5 h-5 mr-2 text-blue-600" />
                  Ressources n√©cessaires
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {atelier.materials.map((material: string, index: number) => (
                    <li key={index} className="flex items-center text-sm">
                      <div className="w-2 h-2 bg-blue-600 rounded-full mr-2" />
                      <span>{material}</span>
                    </li>
                  ))}
                </ul>
                <div className="mt-4">
                  <Link href="/templates">
                    <Button variant="outline" size="sm" className="w-full">
                      <Download className="w-4 h-4 mr-2" />
                      T√©l√©charger les templates
                    </Button>
                  </Link>
                </div>
              </CardContent>
            </Card>

            {/* Mark Complete */}
            <div>
              <MarkCompleteButtonClient 
                type="atelier" 
                slug={resolvedParams.slug} 
                title={atelier.title} 
              />
            </div>

            {/* Retour */}
            <Card>
              <CardContent className="pt-6">
                <Link href="/modules">
                  <Button variant="outline" className="w-full">
                    ‚Üê Retour aux modules
                  </Button>
                </Link>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}
